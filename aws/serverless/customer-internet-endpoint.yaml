AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: |
  Serverless application with OP Gateway for Authorization Server (AS) with mTLS and Fargate integration.

Parameters:

  VpcStack:
    Type: String
    Description: Name of VPC stack to build off of
    Default: vpc-stack

  DomainName:
    Type: String
    Description: The domain name for the service (e.g., trustframeworks.io)

  Route53HostedZoneId:
    Type: String
    Description: The Route 53 Hosted Zone ID for the domain

Resources:

  DefaultSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !ImportValue
        Fn::Sub: ${VpcStack}-vpc-id
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !Ref DefaultSecurityGroup
      Subnets:
        - !ImportValue
          Fn::Sub: ${VpcStack}-public-subnet-1-id
      Type: network

  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref Route53HostedZoneId # Your Route 53 Hosted Zone ID
      Name: !Ref DomainName # The domain name (e.g., trustframeworks.io)
      Type: A # Alias record for IPv4
      AliasTarget:
        DNSName: !GetAtt NetworkLoadBalancer.DNSName # NLB DNS name
        HostedZoneId: !GetAtt NetworkLoadBalancer.CanonicalHostedZoneID # Hosted zone ID for the NLB

Outputs:

  DefaultSecurityGroupExport:
    Description: A reference to the created SG
    Value: !Ref DefaultSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-default-security-group

  NetworkLoadBalancerArnExport:
    Description: A reference to the created NLB
    Value: !Ref NetworkLoadBalancer
    Export:
      Name: !Sub ${AWS::StackName}-nlb-arn

  NetworkLoadBalancerDNSNameExport:
    Description: The DNS name of the Application Load Balancer
    Value: !GetAtt NetworkLoadBalancer.DNSName
    Export:
      Name: !Sub ${AWS::StackName}-nlb-dns-name